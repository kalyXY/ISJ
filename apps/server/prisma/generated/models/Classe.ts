
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Classe` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Classe
 * 
 */
export type ClasseModel = runtime.Types.Result.DefaultSelection<Prisma.$ClassePayload>

export type AggregateClasse = {
  _count: ClasseCountAggregateOutputType | null
  _avg: ClasseAvgAggregateOutputType | null
  _sum: ClasseSumAggregateOutputType | null
  _min: ClasseMinAggregateOutputType | null
  _max: ClasseMaxAggregateOutputType | null
}

export type ClasseAvgAggregateOutputType = {
  capaciteMaximale: number | null
}

export type ClasseSumAggregateOutputType = {
  capaciteMaximale: number | null
}

export type ClasseMinAggregateOutputType = {
  id: string | null
  nom: string | null
  salle: string | null
  sectionId: string | null
  optionId: string | null
  anneeScolaire: string | null
  capaciteMaximale: number | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ClasseMaxAggregateOutputType = {
  id: string | null
  nom: string | null
  salle: string | null
  sectionId: string | null
  optionId: string | null
  anneeScolaire: string | null
  capaciteMaximale: number | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ClasseCountAggregateOutputType = {
  id: number
  nom: number
  salle: number
  sectionId: number
  optionId: number
  anneeScolaire: number
  capaciteMaximale: number
  description: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ClasseAvgAggregateInputType = {
  capaciteMaximale?: true
}

export type ClasseSumAggregateInputType = {
  capaciteMaximale?: true
}

export type ClasseMinAggregateInputType = {
  id?: true
  nom?: true
  salle?: true
  sectionId?: true
  optionId?: true
  anneeScolaire?: true
  capaciteMaximale?: true
  description?: true
  createdAt?: true
  updatedAt?: true
}

export type ClasseMaxAggregateInputType = {
  id?: true
  nom?: true
  salle?: true
  sectionId?: true
  optionId?: true
  anneeScolaire?: true
  capaciteMaximale?: true
  description?: true
  createdAt?: true
  updatedAt?: true
}

export type ClasseCountAggregateInputType = {
  id?: true
  nom?: true
  salle?: true
  sectionId?: true
  optionId?: true
  anneeScolaire?: true
  capaciteMaximale?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ClasseAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Classe to aggregate.
   */
  where?: Prisma.ClasseWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClasseOrderByWithRelationInput | Prisma.ClasseOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ClasseWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Classes
  **/
  _count?: true | ClasseCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ClasseAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ClasseSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ClasseMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ClasseMaxAggregateInputType
}

export type GetClasseAggregateType<T extends ClasseAggregateArgs> = {
      [P in keyof T & keyof AggregateClasse]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateClasse[P]>
    : Prisma.GetScalarType<T[P], AggregateClasse[P]>
}




export type ClasseGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClasseWhereInput
  orderBy?: Prisma.ClasseOrderByWithAggregationInput | Prisma.ClasseOrderByWithAggregationInput[]
  by: Prisma.ClasseScalarFieldEnum[] | Prisma.ClasseScalarFieldEnum
  having?: Prisma.ClasseScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ClasseCountAggregateInputType | true
  _avg?: ClasseAvgAggregateInputType
  _sum?: ClasseSumAggregateInputType
  _min?: ClasseMinAggregateInputType
  _max?: ClasseMaxAggregateInputType
}

export type ClasseGroupByOutputType = {
  id: string
  nom: string
  salle: string | null
  sectionId: string | null
  optionId: string | null
  anneeScolaire: string
  capaciteMaximale: number
  description: string | null
  createdAt: Date
  updatedAt: Date
  _count: ClasseCountAggregateOutputType | null
  _avg: ClasseAvgAggregateOutputType | null
  _sum: ClasseSumAggregateOutputType | null
  _min: ClasseMinAggregateOutputType | null
  _max: ClasseMaxAggregateOutputType | null
}

type GetClasseGroupByPayload<T extends ClasseGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ClasseGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ClasseGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ClasseGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ClasseGroupByOutputType[P]>
      }
    >
  > 



export type ClasseWhereInput = {
  AND?: Prisma.ClasseWhereInput | Prisma.ClasseWhereInput[]
  OR?: Prisma.ClasseWhereInput[]
  NOT?: Prisma.ClasseWhereInput | Prisma.ClasseWhereInput[]
  id?: Prisma.StringFilter<"Classe"> | string
  nom?: Prisma.StringFilter<"Classe"> | string
  salle?: Prisma.StringNullableFilter<"Classe"> | string | null
  sectionId?: Prisma.StringNullableFilter<"Classe"> | string | null
  optionId?: Prisma.StringNullableFilter<"Classe"> | string | null
  anneeScolaire?: Prisma.StringFilter<"Classe"> | string
  capaciteMaximale?: Prisma.IntFilter<"Classe"> | number
  description?: Prisma.StringNullableFilter<"Classe"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Classe"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Classe"> | Date | string
  section?: Prisma.XOR<Prisma.SectionNullableScalarRelationFilter, Prisma.SectionWhereInput> | null
  option?: Prisma.XOR<Prisma.OptionNullableScalarRelationFilter, Prisma.OptionWhereInput> | null
  matieres?: Prisma.MatiereListRelationFilter
  students?: Prisma.StudentListRelationFilter
  enseignantsClasses?: Prisma.EnseignantClasseListRelationFilter
  titulaireEnseignant?: Prisma.XOR<Prisma.EnseignantNullableScalarRelationFilter, Prisma.EnseignantWhereInput> | null
  bulletins?: Prisma.BulletinListRelationFilter
}

export type ClasseOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  nom?: Prisma.SortOrder
  salle?: Prisma.SortOrder
  sectionId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  anneeScolaire?: Prisma.SortOrder
  capaciteMaximale?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  section?: Prisma.SectionOrderByWithRelationInput
  option?: Prisma.OptionOrderByWithRelationInput
  matieres?: Prisma.MatiereOrderByRelationAggregateInput
  students?: Prisma.StudentOrderByRelationAggregateInput
  enseignantsClasses?: Prisma.EnseignantClasseOrderByRelationAggregateInput
  titulaireEnseignant?: Prisma.EnseignantOrderByWithRelationInput
  bulletins?: Prisma.BulletinOrderByRelationAggregateInput
}

export type ClasseWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ClasseWhereInput | Prisma.ClasseWhereInput[]
  OR?: Prisma.ClasseWhereInput[]
  NOT?: Prisma.ClasseWhereInput | Prisma.ClasseWhereInput[]
  nom?: Prisma.StringFilter<"Classe"> | string
  salle?: Prisma.StringNullableFilter<"Classe"> | string | null
  sectionId?: Prisma.StringNullableFilter<"Classe"> | string | null
  optionId?: Prisma.StringNullableFilter<"Classe"> | string | null
  anneeScolaire?: Prisma.StringFilter<"Classe"> | string
  capaciteMaximale?: Prisma.IntFilter<"Classe"> | number
  description?: Prisma.StringNullableFilter<"Classe"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Classe"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Classe"> | Date | string
  section?: Prisma.XOR<Prisma.SectionNullableScalarRelationFilter, Prisma.SectionWhereInput> | null
  option?: Prisma.XOR<Prisma.OptionNullableScalarRelationFilter, Prisma.OptionWhereInput> | null
  matieres?: Prisma.MatiereListRelationFilter
  students?: Prisma.StudentListRelationFilter
  enseignantsClasses?: Prisma.EnseignantClasseListRelationFilter
  titulaireEnseignant?: Prisma.XOR<Prisma.EnseignantNullableScalarRelationFilter, Prisma.EnseignantWhereInput> | null
  bulletins?: Prisma.BulletinListRelationFilter
}, "id">

export type ClasseOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  nom?: Prisma.SortOrder
  salle?: Prisma.SortOrder
  sectionId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  anneeScolaire?: Prisma.SortOrder
  capaciteMaximale?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ClasseCountOrderByAggregateInput
  _avg?: Prisma.ClasseAvgOrderByAggregateInput
  _max?: Prisma.ClasseMaxOrderByAggregateInput
  _min?: Prisma.ClasseMinOrderByAggregateInput
  _sum?: Prisma.ClasseSumOrderByAggregateInput
}

export type ClasseScalarWhereWithAggregatesInput = {
  AND?: Prisma.ClasseScalarWhereWithAggregatesInput | Prisma.ClasseScalarWhereWithAggregatesInput[]
  OR?: Prisma.ClasseScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ClasseScalarWhereWithAggregatesInput | Prisma.ClasseScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Classe"> | string
  nom?: Prisma.StringWithAggregatesFilter<"Classe"> | string
  salle?: Prisma.StringNullableWithAggregatesFilter<"Classe"> | string | null
  sectionId?: Prisma.StringNullableWithAggregatesFilter<"Classe"> | string | null
  optionId?: Prisma.StringNullableWithAggregatesFilter<"Classe"> | string | null
  anneeScolaire?: Prisma.StringWithAggregatesFilter<"Classe"> | string
  capaciteMaximale?: Prisma.IntWithAggregatesFilter<"Classe"> | number
  description?: Prisma.StringNullableWithAggregatesFilter<"Classe"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Classe"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Classe"> | Date | string
}

export type ClasseCreateInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseUpdateInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseCreateManyInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClasseUpdateManyMutationInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ClasseUncheckedUpdateManyInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ClasseNullableScalarRelationFilter = {
  is?: Prisma.ClasseWhereInput | null
  isNot?: Prisma.ClasseWhereInput | null
}

export type ClasseListRelationFilter = {
  every?: Prisma.ClasseWhereInput
  some?: Prisma.ClasseWhereInput
  none?: Prisma.ClasseWhereInput
}

export type ClasseOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ClasseCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nom?: Prisma.SortOrder
  salle?: Prisma.SortOrder
  sectionId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  anneeScolaire?: Prisma.SortOrder
  capaciteMaximale?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ClasseAvgOrderByAggregateInput = {
  capaciteMaximale?: Prisma.SortOrder
}

export type ClasseMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nom?: Prisma.SortOrder
  salle?: Prisma.SortOrder
  sectionId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  anneeScolaire?: Prisma.SortOrder
  capaciteMaximale?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ClasseMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nom?: Prisma.SortOrder
  salle?: Prisma.SortOrder
  sectionId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  anneeScolaire?: Prisma.SortOrder
  capaciteMaximale?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ClasseSumOrderByAggregateInput = {
  capaciteMaximale?: Prisma.SortOrder
}

export type ClasseScalarRelationFilter = {
  is?: Prisma.ClasseWhereInput
  isNot?: Prisma.ClasseWhereInput
}

export type ClasseCreateNestedOneWithoutStudentsInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutStudentsInput, Prisma.ClasseUncheckedCreateWithoutStudentsInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutStudentsInput
  connect?: Prisma.ClasseWhereUniqueInput
}

export type ClasseUpdateOneWithoutStudentsNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutStudentsInput, Prisma.ClasseUncheckedCreateWithoutStudentsInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutStudentsInput
  upsert?: Prisma.ClasseUpsertWithoutStudentsInput
  disconnect?: boolean
  delete?: Prisma.ClasseWhereInput | boolean
  connect?: Prisma.ClasseWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClasseUpdateToOneWithWhereWithoutStudentsInput, Prisma.ClasseUpdateWithoutStudentsInput>, Prisma.ClasseUncheckedUpdateWithoutStudentsInput>
}

export type ClasseCreateNestedManyWithoutSectionInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutSectionInput, Prisma.ClasseUncheckedCreateWithoutSectionInput> | Prisma.ClasseCreateWithoutSectionInput[] | Prisma.ClasseUncheckedCreateWithoutSectionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutSectionInput | Prisma.ClasseCreateOrConnectWithoutSectionInput[]
  createMany?: Prisma.ClasseCreateManySectionInputEnvelope
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
}

export type ClasseUncheckedCreateNestedManyWithoutSectionInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutSectionInput, Prisma.ClasseUncheckedCreateWithoutSectionInput> | Prisma.ClasseCreateWithoutSectionInput[] | Prisma.ClasseUncheckedCreateWithoutSectionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutSectionInput | Prisma.ClasseCreateOrConnectWithoutSectionInput[]
  createMany?: Prisma.ClasseCreateManySectionInputEnvelope
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
}

export type ClasseUpdateManyWithoutSectionNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutSectionInput, Prisma.ClasseUncheckedCreateWithoutSectionInput> | Prisma.ClasseCreateWithoutSectionInput[] | Prisma.ClasseUncheckedCreateWithoutSectionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutSectionInput | Prisma.ClasseCreateOrConnectWithoutSectionInput[]
  upsert?: Prisma.ClasseUpsertWithWhereUniqueWithoutSectionInput | Prisma.ClasseUpsertWithWhereUniqueWithoutSectionInput[]
  createMany?: Prisma.ClasseCreateManySectionInputEnvelope
  set?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  disconnect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  delete?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  update?: Prisma.ClasseUpdateWithWhereUniqueWithoutSectionInput | Prisma.ClasseUpdateWithWhereUniqueWithoutSectionInput[]
  updateMany?: Prisma.ClasseUpdateManyWithWhereWithoutSectionInput | Prisma.ClasseUpdateManyWithWhereWithoutSectionInput[]
  deleteMany?: Prisma.ClasseScalarWhereInput | Prisma.ClasseScalarWhereInput[]
}

export type ClasseUncheckedUpdateManyWithoutSectionNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutSectionInput, Prisma.ClasseUncheckedCreateWithoutSectionInput> | Prisma.ClasseCreateWithoutSectionInput[] | Prisma.ClasseUncheckedCreateWithoutSectionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutSectionInput | Prisma.ClasseCreateOrConnectWithoutSectionInput[]
  upsert?: Prisma.ClasseUpsertWithWhereUniqueWithoutSectionInput | Prisma.ClasseUpsertWithWhereUniqueWithoutSectionInput[]
  createMany?: Prisma.ClasseCreateManySectionInputEnvelope
  set?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  disconnect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  delete?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  update?: Prisma.ClasseUpdateWithWhereUniqueWithoutSectionInput | Prisma.ClasseUpdateWithWhereUniqueWithoutSectionInput[]
  updateMany?: Prisma.ClasseUpdateManyWithWhereWithoutSectionInput | Prisma.ClasseUpdateManyWithWhereWithoutSectionInput[]
  deleteMany?: Prisma.ClasseScalarWhereInput | Prisma.ClasseScalarWhereInput[]
}

export type ClasseCreateNestedManyWithoutOptionInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutOptionInput, Prisma.ClasseUncheckedCreateWithoutOptionInput> | Prisma.ClasseCreateWithoutOptionInput[] | Prisma.ClasseUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutOptionInput | Prisma.ClasseCreateOrConnectWithoutOptionInput[]
  createMany?: Prisma.ClasseCreateManyOptionInputEnvelope
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
}

export type ClasseUncheckedCreateNestedManyWithoutOptionInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutOptionInput, Prisma.ClasseUncheckedCreateWithoutOptionInput> | Prisma.ClasseCreateWithoutOptionInput[] | Prisma.ClasseUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutOptionInput | Prisma.ClasseCreateOrConnectWithoutOptionInput[]
  createMany?: Prisma.ClasseCreateManyOptionInputEnvelope
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
}

export type ClasseUpdateManyWithoutOptionNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutOptionInput, Prisma.ClasseUncheckedCreateWithoutOptionInput> | Prisma.ClasseCreateWithoutOptionInput[] | Prisma.ClasseUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutOptionInput | Prisma.ClasseCreateOrConnectWithoutOptionInput[]
  upsert?: Prisma.ClasseUpsertWithWhereUniqueWithoutOptionInput | Prisma.ClasseUpsertWithWhereUniqueWithoutOptionInput[]
  createMany?: Prisma.ClasseCreateManyOptionInputEnvelope
  set?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  disconnect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  delete?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  update?: Prisma.ClasseUpdateWithWhereUniqueWithoutOptionInput | Prisma.ClasseUpdateWithWhereUniqueWithoutOptionInput[]
  updateMany?: Prisma.ClasseUpdateManyWithWhereWithoutOptionInput | Prisma.ClasseUpdateManyWithWhereWithoutOptionInput[]
  deleteMany?: Prisma.ClasseScalarWhereInput | Prisma.ClasseScalarWhereInput[]
}

export type ClasseUncheckedUpdateManyWithoutOptionNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutOptionInput, Prisma.ClasseUncheckedCreateWithoutOptionInput> | Prisma.ClasseCreateWithoutOptionInput[] | Prisma.ClasseUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutOptionInput | Prisma.ClasseCreateOrConnectWithoutOptionInput[]
  upsert?: Prisma.ClasseUpsertWithWhereUniqueWithoutOptionInput | Prisma.ClasseUpsertWithWhereUniqueWithoutOptionInput[]
  createMany?: Prisma.ClasseCreateManyOptionInputEnvelope
  set?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  disconnect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  delete?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  connect?: Prisma.ClasseWhereUniqueInput | Prisma.ClasseWhereUniqueInput[]
  update?: Prisma.ClasseUpdateWithWhereUniqueWithoutOptionInput | Prisma.ClasseUpdateWithWhereUniqueWithoutOptionInput[]
  updateMany?: Prisma.ClasseUpdateManyWithWhereWithoutOptionInput | Prisma.ClasseUpdateManyWithWhereWithoutOptionInput[]
  deleteMany?: Prisma.ClasseScalarWhereInput | Prisma.ClasseScalarWhereInput[]
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type ClasseCreateNestedOneWithoutMatieresInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutMatieresInput, Prisma.ClasseUncheckedCreateWithoutMatieresInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutMatieresInput
  connect?: Prisma.ClasseWhereUniqueInput
}

export type ClasseUpdateOneRequiredWithoutMatieresNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutMatieresInput, Prisma.ClasseUncheckedCreateWithoutMatieresInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutMatieresInput
  upsert?: Prisma.ClasseUpsertWithoutMatieresInput
  connect?: Prisma.ClasseWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClasseUpdateToOneWithWhereWithoutMatieresInput, Prisma.ClasseUpdateWithoutMatieresInput>, Prisma.ClasseUncheckedUpdateWithoutMatieresInput>
}

export type ClasseCreateNestedOneWithoutTitulaireEnseignantInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutTitulaireEnseignantInput, Prisma.ClasseUncheckedCreateWithoutTitulaireEnseignantInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutTitulaireEnseignantInput
  connect?: Prisma.ClasseWhereUniqueInput
}

export type ClasseUpdateOneWithoutTitulaireEnseignantNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutTitulaireEnseignantInput, Prisma.ClasseUncheckedCreateWithoutTitulaireEnseignantInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutTitulaireEnseignantInput
  upsert?: Prisma.ClasseUpsertWithoutTitulaireEnseignantInput
  disconnect?: boolean
  delete?: Prisma.ClasseWhereInput | boolean
  connect?: Prisma.ClasseWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClasseUpdateToOneWithWhereWithoutTitulaireEnseignantInput, Prisma.ClasseUpdateWithoutTitulaireEnseignantInput>, Prisma.ClasseUncheckedUpdateWithoutTitulaireEnseignantInput>
}

export type ClasseCreateNestedOneWithoutEnseignantsClassesInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutEnseignantsClassesInput, Prisma.ClasseUncheckedCreateWithoutEnseignantsClassesInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutEnseignantsClassesInput
  connect?: Prisma.ClasseWhereUniqueInput
}

export type ClasseUpdateOneRequiredWithoutEnseignantsClassesNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutEnseignantsClassesInput, Prisma.ClasseUncheckedCreateWithoutEnseignantsClassesInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutEnseignantsClassesInput
  upsert?: Prisma.ClasseUpsertWithoutEnseignantsClassesInput
  connect?: Prisma.ClasseWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClasseUpdateToOneWithWhereWithoutEnseignantsClassesInput, Prisma.ClasseUpdateWithoutEnseignantsClassesInput>, Prisma.ClasseUncheckedUpdateWithoutEnseignantsClassesInput>
}

export type ClasseCreateNestedOneWithoutBulletinsInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutBulletinsInput, Prisma.ClasseUncheckedCreateWithoutBulletinsInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutBulletinsInput
  connect?: Prisma.ClasseWhereUniqueInput
}

export type ClasseUpdateOneRequiredWithoutBulletinsNestedInput = {
  create?: Prisma.XOR<Prisma.ClasseCreateWithoutBulletinsInput, Prisma.ClasseUncheckedCreateWithoutBulletinsInput>
  connectOrCreate?: Prisma.ClasseCreateOrConnectWithoutBulletinsInput
  upsert?: Prisma.ClasseUpsertWithoutBulletinsInput
  connect?: Prisma.ClasseWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClasseUpdateToOneWithWhereWithoutBulletinsInput, Prisma.ClasseUpdateWithoutBulletinsInput>, Prisma.ClasseUncheckedUpdateWithoutBulletinsInput>
}

export type ClasseCreateWithoutStudentsInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateWithoutStudentsInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseCreateOrConnectWithoutStudentsInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutStudentsInput, Prisma.ClasseUncheckedCreateWithoutStudentsInput>
}

export type ClasseUpsertWithoutStudentsInput = {
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutStudentsInput, Prisma.ClasseUncheckedUpdateWithoutStudentsInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutStudentsInput, Prisma.ClasseUncheckedCreateWithoutStudentsInput>
  where?: Prisma.ClasseWhereInput
}

export type ClasseUpdateToOneWithWhereWithoutStudentsInput = {
  where?: Prisma.ClasseWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutStudentsInput, Prisma.ClasseUncheckedUpdateWithoutStudentsInput>
}

export type ClasseUpdateWithoutStudentsInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateWithoutStudentsInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseCreateWithoutSectionInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateWithoutSectionInput = {
  id?: string
  nom: string
  salle?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseCreateOrConnectWithoutSectionInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutSectionInput, Prisma.ClasseUncheckedCreateWithoutSectionInput>
}

export type ClasseCreateManySectionInputEnvelope = {
  data: Prisma.ClasseCreateManySectionInput | Prisma.ClasseCreateManySectionInput[]
}

export type ClasseUpsertWithWhereUniqueWithoutSectionInput = {
  where: Prisma.ClasseWhereUniqueInput
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutSectionInput, Prisma.ClasseUncheckedUpdateWithoutSectionInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutSectionInput, Prisma.ClasseUncheckedCreateWithoutSectionInput>
}

export type ClasseUpdateWithWhereUniqueWithoutSectionInput = {
  where: Prisma.ClasseWhereUniqueInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutSectionInput, Prisma.ClasseUncheckedUpdateWithoutSectionInput>
}

export type ClasseUpdateManyWithWhereWithoutSectionInput = {
  where: Prisma.ClasseScalarWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateManyMutationInput, Prisma.ClasseUncheckedUpdateManyWithoutSectionInput>
}

export type ClasseScalarWhereInput = {
  AND?: Prisma.ClasseScalarWhereInput | Prisma.ClasseScalarWhereInput[]
  OR?: Prisma.ClasseScalarWhereInput[]
  NOT?: Prisma.ClasseScalarWhereInput | Prisma.ClasseScalarWhereInput[]
  id?: Prisma.StringFilter<"Classe"> | string
  nom?: Prisma.StringFilter<"Classe"> | string
  salle?: Prisma.StringNullableFilter<"Classe"> | string | null
  sectionId?: Prisma.StringNullableFilter<"Classe"> | string | null
  optionId?: Prisma.StringNullableFilter<"Classe"> | string | null
  anneeScolaire?: Prisma.StringFilter<"Classe"> | string
  capaciteMaximale?: Prisma.IntFilter<"Classe"> | number
  description?: Prisma.StringNullableFilter<"Classe"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Classe"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Classe"> | Date | string
}

export type ClasseCreateWithoutOptionInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateWithoutOptionInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseCreateOrConnectWithoutOptionInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutOptionInput, Prisma.ClasseUncheckedCreateWithoutOptionInput>
}

export type ClasseCreateManyOptionInputEnvelope = {
  data: Prisma.ClasseCreateManyOptionInput | Prisma.ClasseCreateManyOptionInput[]
}

export type ClasseUpsertWithWhereUniqueWithoutOptionInput = {
  where: Prisma.ClasseWhereUniqueInput
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutOptionInput, Prisma.ClasseUncheckedUpdateWithoutOptionInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutOptionInput, Prisma.ClasseUncheckedCreateWithoutOptionInput>
}

export type ClasseUpdateWithWhereUniqueWithoutOptionInput = {
  where: Prisma.ClasseWhereUniqueInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutOptionInput, Prisma.ClasseUncheckedUpdateWithoutOptionInput>
}

export type ClasseUpdateManyWithWhereWithoutOptionInput = {
  where: Prisma.ClasseScalarWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateManyMutationInput, Prisma.ClasseUncheckedUpdateManyWithoutOptionInput>
}

export type ClasseCreateWithoutMatieresInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateWithoutMatieresInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseCreateOrConnectWithoutMatieresInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutMatieresInput, Prisma.ClasseUncheckedCreateWithoutMatieresInput>
}

export type ClasseUpsertWithoutMatieresInput = {
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutMatieresInput, Prisma.ClasseUncheckedUpdateWithoutMatieresInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutMatieresInput, Prisma.ClasseUncheckedCreateWithoutMatieresInput>
  where?: Prisma.ClasseWhereInput
}

export type ClasseUpdateToOneWithWhereWithoutMatieresInput = {
  where?: Prisma.ClasseWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutMatieresInput, Prisma.ClasseUncheckedUpdateWithoutMatieresInput>
}

export type ClasseUpdateWithoutMatieresInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateWithoutMatieresInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseCreateWithoutTitulaireEnseignantInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateWithoutTitulaireEnseignantInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseCreateOrConnectWithoutTitulaireEnseignantInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutTitulaireEnseignantInput, Prisma.ClasseUncheckedCreateWithoutTitulaireEnseignantInput>
}

export type ClasseUpsertWithoutTitulaireEnseignantInput = {
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutTitulaireEnseignantInput, Prisma.ClasseUncheckedUpdateWithoutTitulaireEnseignantInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutTitulaireEnseignantInput, Prisma.ClasseUncheckedCreateWithoutTitulaireEnseignantInput>
  where?: Prisma.ClasseWhereInput
}

export type ClasseUpdateToOneWithWhereWithoutTitulaireEnseignantInput = {
  where?: Prisma.ClasseWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutTitulaireEnseignantInput, Prisma.ClasseUncheckedUpdateWithoutTitulaireEnseignantInput>
}

export type ClasseUpdateWithoutTitulaireEnseignantInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateWithoutTitulaireEnseignantInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseCreateWithoutEnseignantsClassesInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinCreateNestedManyWithoutClasseInput
}

export type ClasseUncheckedCreateWithoutEnseignantsClassesInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
  bulletins?: Prisma.BulletinUncheckedCreateNestedManyWithoutClasseInput
}

export type ClasseCreateOrConnectWithoutEnseignantsClassesInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutEnseignantsClassesInput, Prisma.ClasseUncheckedCreateWithoutEnseignantsClassesInput>
}

export type ClasseUpsertWithoutEnseignantsClassesInput = {
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutEnseignantsClassesInput, Prisma.ClasseUncheckedUpdateWithoutEnseignantsClassesInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutEnseignantsClassesInput, Prisma.ClasseUncheckedCreateWithoutEnseignantsClassesInput>
  where?: Prisma.ClasseWhereInput
}

export type ClasseUpdateToOneWithWhereWithoutEnseignantsClassesInput = {
  where?: Prisma.ClasseWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutEnseignantsClassesInput, Prisma.ClasseUncheckedUpdateWithoutEnseignantsClassesInput>
}

export type ClasseUpdateWithoutEnseignantsClassesInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateWithoutEnseignantsClassesInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseCreateWithoutBulletinsInput = {
  id?: string
  nom: string
  salle?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  section?: Prisma.SectionCreateNestedOneWithoutClassesInput
  option?: Prisma.OptionCreateNestedOneWithoutClassesInput
  matieres?: Prisma.MatiereCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantCreateNestedOneWithoutAssignedClassroomInput
}

export type ClasseUncheckedCreateWithoutBulletinsInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  matieres?: Prisma.MatiereUncheckedCreateNestedManyWithoutClasseInput
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClasseInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedCreateNestedManyWithoutClasseInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedCreateNestedOneWithoutAssignedClassroomInput
}

export type ClasseCreateOrConnectWithoutBulletinsInput = {
  where: Prisma.ClasseWhereUniqueInput
  create: Prisma.XOR<Prisma.ClasseCreateWithoutBulletinsInput, Prisma.ClasseUncheckedCreateWithoutBulletinsInput>
}

export type ClasseUpsertWithoutBulletinsInput = {
  update: Prisma.XOR<Prisma.ClasseUpdateWithoutBulletinsInput, Prisma.ClasseUncheckedUpdateWithoutBulletinsInput>
  create: Prisma.XOR<Prisma.ClasseCreateWithoutBulletinsInput, Prisma.ClasseUncheckedCreateWithoutBulletinsInput>
  where?: Prisma.ClasseWhereInput
}

export type ClasseUpdateToOneWithWhereWithoutBulletinsInput = {
  where?: Prisma.ClasseWhereInput
  data: Prisma.XOR<Prisma.ClasseUpdateWithoutBulletinsInput, Prisma.ClasseUncheckedUpdateWithoutBulletinsInput>
}

export type ClasseUpdateWithoutBulletinsInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
}

export type ClasseUncheckedUpdateWithoutBulletinsInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
}

export type ClasseCreateManySectionInput = {
  id?: string
  nom: string
  salle?: string | null
  optionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClasseUpdateWithoutSectionInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  option?: Prisma.OptionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateWithoutSectionInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateManyWithoutSectionInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  optionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ClasseCreateManyOptionInput = {
  id?: string
  nom: string
  salle?: string | null
  sectionId?: string | null
  anneeScolaire: string
  capaciteMaximale?: number
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClasseUpdateWithoutOptionInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  section?: Prisma.SectionUpdateOneWithoutClassesNestedInput
  matieres?: Prisma.MatiereUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateWithoutOptionInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  matieres?: Prisma.MatiereUncheckedUpdateManyWithoutClasseNestedInput
  students?: Prisma.StudentUncheckedUpdateManyWithoutClasseNestedInput
  enseignantsClasses?: Prisma.EnseignantClasseUncheckedUpdateManyWithoutClasseNestedInput
  titulaireEnseignant?: Prisma.EnseignantUncheckedUpdateOneWithoutAssignedClassroomNestedInput
  bulletins?: Prisma.BulletinUncheckedUpdateManyWithoutClasseNestedInput
}

export type ClasseUncheckedUpdateManyWithoutOptionInput = {
  nom?: Prisma.StringFieldUpdateOperationsInput | string
  salle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sectionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  anneeScolaire?: Prisma.StringFieldUpdateOperationsInput | string
  capaciteMaximale?: Prisma.IntFieldUpdateOperationsInput | number
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ClasseCountOutputType
 */

export type ClasseCountOutputType = {
  matieres: number
  students: number
  enseignantsClasses: number
  bulletins: number
}

export type ClasseCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  matieres?: boolean | ClasseCountOutputTypeCountMatieresArgs
  students?: boolean | ClasseCountOutputTypeCountStudentsArgs
  enseignantsClasses?: boolean | ClasseCountOutputTypeCountEnseignantsClassesArgs
  bulletins?: boolean | ClasseCountOutputTypeCountBulletinsArgs
}

/**
 * ClasseCountOutputType without action
 */
export type ClasseCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClasseCountOutputType
   */
  select?: Prisma.ClasseCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ClasseCountOutputType without action
 */
export type ClasseCountOutputTypeCountMatieresArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MatiereWhereInput
}

/**
 * ClasseCountOutputType without action
 */
export type ClasseCountOutputTypeCountStudentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentWhereInput
}

/**
 * ClasseCountOutputType without action
 */
export type ClasseCountOutputTypeCountEnseignantsClassesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EnseignantClasseWhereInput
}

/**
 * ClasseCountOutputType without action
 */
export type ClasseCountOutputTypeCountBulletinsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BulletinWhereInput
}


export type ClasseSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  nom?: boolean
  salle?: boolean
  sectionId?: boolean
  optionId?: boolean
  anneeScolaire?: boolean
  capaciteMaximale?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  section?: boolean | Prisma.Classe$sectionArgs<ExtArgs>
  option?: boolean | Prisma.Classe$optionArgs<ExtArgs>
  matieres?: boolean | Prisma.Classe$matieresArgs<ExtArgs>
  students?: boolean | Prisma.Classe$studentsArgs<ExtArgs>
  enseignantsClasses?: boolean | Prisma.Classe$enseignantsClassesArgs<ExtArgs>
  titulaireEnseignant?: boolean | Prisma.Classe$titulaireEnseignantArgs<ExtArgs>
  bulletins?: boolean | Prisma.Classe$bulletinsArgs<ExtArgs>
  _count?: boolean | Prisma.ClasseCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["classe"]>



export type ClasseSelectScalar = {
  id?: boolean
  nom?: boolean
  salle?: boolean
  sectionId?: boolean
  optionId?: boolean
  anneeScolaire?: boolean
  capaciteMaximale?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ClasseOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "nom" | "salle" | "sectionId" | "optionId" | "anneeScolaire" | "capaciteMaximale" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["classe"]>
export type ClasseInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  section?: boolean | Prisma.Classe$sectionArgs<ExtArgs>
  option?: boolean | Prisma.Classe$optionArgs<ExtArgs>
  matieres?: boolean | Prisma.Classe$matieresArgs<ExtArgs>
  students?: boolean | Prisma.Classe$studentsArgs<ExtArgs>
  enseignantsClasses?: boolean | Prisma.Classe$enseignantsClassesArgs<ExtArgs>
  titulaireEnseignant?: boolean | Prisma.Classe$titulaireEnseignantArgs<ExtArgs>
  bulletins?: boolean | Prisma.Classe$bulletinsArgs<ExtArgs>
  _count?: boolean | Prisma.ClasseCountOutputTypeDefaultArgs<ExtArgs>
}

export type $ClassePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Classe"
  objects: {
    section: Prisma.$SectionPayload<ExtArgs> | null
    option: Prisma.$OptionPayload<ExtArgs> | null
    matieres: Prisma.$MatierePayload<ExtArgs>[]
    students: Prisma.$StudentPayload<ExtArgs>[]
    enseignantsClasses: Prisma.$EnseignantClassePayload<ExtArgs>[]
    titulaireEnseignant: Prisma.$EnseignantPayload<ExtArgs> | null
    bulletins: Prisma.$BulletinPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    nom: string
    salle: string | null
    sectionId: string | null
    optionId: string | null
    anneeScolaire: string
    capaciteMaximale: number
    description: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["classe"]>
  composites: {}
}

export type ClasseGetPayload<S extends boolean | null | undefined | ClasseDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ClassePayload, S>

export type ClasseCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ClasseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ClasseCountAggregateInputType | true
  }

export interface ClasseDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Classe'], meta: { name: 'Classe' } }
  /**
   * Find zero or one Classe that matches the filter.
   * @param {ClasseFindUniqueArgs} args - Arguments to find a Classe
   * @example
   * // Get one Classe
   * const classe = await prisma.classe.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ClasseFindUniqueArgs>(args: Prisma.SelectSubset<T, ClasseFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Classe that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ClasseFindUniqueOrThrowArgs} args - Arguments to find a Classe
   * @example
   * // Get one Classe
   * const classe = await prisma.classe.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ClasseFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ClasseFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Classe that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseFindFirstArgs} args - Arguments to find a Classe
   * @example
   * // Get one Classe
   * const classe = await prisma.classe.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ClasseFindFirstArgs>(args?: Prisma.SelectSubset<T, ClasseFindFirstArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Classe that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseFindFirstOrThrowArgs} args - Arguments to find a Classe
   * @example
   * // Get one Classe
   * const classe = await prisma.classe.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ClasseFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ClasseFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Classes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Classes
   * const classes = await prisma.classe.findMany()
   * 
   * // Get first 10 Classes
   * const classes = await prisma.classe.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const classeWithIdOnly = await prisma.classe.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ClasseFindManyArgs>(args?: Prisma.SelectSubset<T, ClasseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Classe.
   * @param {ClasseCreateArgs} args - Arguments to create a Classe.
   * @example
   * // Create one Classe
   * const Classe = await prisma.classe.create({
   *   data: {
   *     // ... data to create a Classe
   *   }
   * })
   * 
   */
  create<T extends ClasseCreateArgs>(args: Prisma.SelectSubset<T, ClasseCreateArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Classes.
   * @param {ClasseCreateManyArgs} args - Arguments to create many Classes.
   * @example
   * // Create many Classes
   * const classe = await prisma.classe.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ClasseCreateManyArgs>(args?: Prisma.SelectSubset<T, ClasseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Classe.
   * @param {ClasseDeleteArgs} args - Arguments to delete one Classe.
   * @example
   * // Delete one Classe
   * const Classe = await prisma.classe.delete({
   *   where: {
   *     // ... filter to delete one Classe
   *   }
   * })
   * 
   */
  delete<T extends ClasseDeleteArgs>(args: Prisma.SelectSubset<T, ClasseDeleteArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Classe.
   * @param {ClasseUpdateArgs} args - Arguments to update one Classe.
   * @example
   * // Update one Classe
   * const classe = await prisma.classe.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ClasseUpdateArgs>(args: Prisma.SelectSubset<T, ClasseUpdateArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Classes.
   * @param {ClasseDeleteManyArgs} args - Arguments to filter Classes to delete.
   * @example
   * // Delete a few Classes
   * const { count } = await prisma.classe.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ClasseDeleteManyArgs>(args?: Prisma.SelectSubset<T, ClasseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Classes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Classes
   * const classe = await prisma.classe.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ClasseUpdateManyArgs>(args: Prisma.SelectSubset<T, ClasseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Classe.
   * @param {ClasseUpsertArgs} args - Arguments to update or create a Classe.
   * @example
   * // Update or create a Classe
   * const classe = await prisma.classe.upsert({
   *   create: {
   *     // ... data to create a Classe
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Classe we want to update
   *   }
   * })
   */
  upsert<T extends ClasseUpsertArgs>(args: Prisma.SelectSubset<T, ClasseUpsertArgs<ExtArgs>>): Prisma.Prisma__ClasseClient<runtime.Types.Result.GetResult<Prisma.$ClassePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Classes that matches the filter.
   * @param {ClasseFindRawArgs} args - Select which filters you would like to apply.
   * @example
   * const classe = await prisma.classe.findRaw({
   *   filter: { age: { $gt: 25 } }
   * })
   */
  findRaw(args?: Prisma.ClasseFindRawArgs): Prisma.PrismaPromise<Prisma.JsonObject>

  /**
   * Perform aggregation operations on a Classe.
   * @param {ClasseAggregateRawArgs} args - Select which aggregations you would like to apply.
   * @example
   * const classe = await prisma.classe.aggregateRaw({
   *   pipeline: [
   *     { $match: { status: "registered" } },
   *     { $group: { _id: "$country", total: { $sum: 1 } } }
   *   ]
   * })
   */
  aggregateRaw(args?: Prisma.ClasseAggregateRawArgs): Prisma.PrismaPromise<Prisma.JsonObject>


  /**
   * Count the number of Classes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseCountArgs} args - Arguments to filter Classes to count.
   * @example
   * // Count the number of Classes
   * const count = await prisma.classe.count({
   *   where: {
   *     // ... the filter for the Classes we want to count
   *   }
   * })
  **/
  count<T extends ClasseCountArgs>(
    args?: Prisma.Subset<T, ClasseCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ClasseCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Classe.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ClasseAggregateArgs>(args: Prisma.Subset<T, ClasseAggregateArgs>): Prisma.PrismaPromise<GetClasseAggregateType<T>>

  /**
   * Group by Classe.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClasseGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ClasseGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ClasseGroupByArgs['orderBy'] }
      : { orderBy?: ClasseGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ClasseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClasseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Classe model
 */
readonly fields: ClasseFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Classe.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ClasseClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  section<T extends Prisma.Classe$sectionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$sectionArgs<ExtArgs>>): Prisma.Prisma__SectionClient<runtime.Types.Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  option<T extends Prisma.Classe$optionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$optionArgs<ExtArgs>>): Prisma.Prisma__OptionClient<runtime.Types.Result.GetResult<Prisma.$OptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  matieres<T extends Prisma.Classe$matieresArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$matieresArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MatierePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  students<T extends Prisma.Classe$studentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$studentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  enseignantsClasses<T extends Prisma.Classe$enseignantsClassesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$enseignantsClassesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EnseignantClassePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  titulaireEnseignant<T extends Prisma.Classe$titulaireEnseignantArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$titulaireEnseignantArgs<ExtArgs>>): Prisma.Prisma__EnseignantClient<runtime.Types.Result.GetResult<Prisma.$EnseignantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  bulletins<T extends Prisma.Classe$bulletinsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Classe$bulletinsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BulletinPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Classe model
 */
export interface ClasseFieldRefs {
  readonly id: Prisma.FieldRef<"Classe", 'String'>
  readonly nom: Prisma.FieldRef<"Classe", 'String'>
  readonly salle: Prisma.FieldRef<"Classe", 'String'>
  readonly sectionId: Prisma.FieldRef<"Classe", 'String'>
  readonly optionId: Prisma.FieldRef<"Classe", 'String'>
  readonly anneeScolaire: Prisma.FieldRef<"Classe", 'String'>
  readonly capaciteMaximale: Prisma.FieldRef<"Classe", 'Int'>
  readonly description: Prisma.FieldRef<"Classe", 'String'>
  readonly createdAt: Prisma.FieldRef<"Classe", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Classe", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Classe findUnique
 */
export type ClasseFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * Filter, which Classe to fetch.
   */
  where: Prisma.ClasseWhereUniqueInput
}

/**
 * Classe findUniqueOrThrow
 */
export type ClasseFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * Filter, which Classe to fetch.
   */
  where: Prisma.ClasseWhereUniqueInput
}

/**
 * Classe findFirst
 */
export type ClasseFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * Filter, which Classe to fetch.
   */
  where?: Prisma.ClasseWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClasseOrderByWithRelationInput | Prisma.ClasseOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Classes.
   */
  cursor?: Prisma.ClasseWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Classes.
   */
  distinct?: Prisma.ClasseScalarFieldEnum | Prisma.ClasseScalarFieldEnum[]
}

/**
 * Classe findFirstOrThrow
 */
export type ClasseFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * Filter, which Classe to fetch.
   */
  where?: Prisma.ClasseWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClasseOrderByWithRelationInput | Prisma.ClasseOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Classes.
   */
  cursor?: Prisma.ClasseWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Classes.
   */
  distinct?: Prisma.ClasseScalarFieldEnum | Prisma.ClasseScalarFieldEnum[]
}

/**
 * Classe findMany
 */
export type ClasseFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * Filter, which Classes to fetch.
   */
  where?: Prisma.ClasseWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClasseOrderByWithRelationInput | Prisma.ClasseOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Classes.
   */
  cursor?: Prisma.ClasseWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  distinct?: Prisma.ClasseScalarFieldEnum | Prisma.ClasseScalarFieldEnum[]
}

/**
 * Classe create
 */
export type ClasseCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * The data needed to create a Classe.
   */
  data: Prisma.XOR<Prisma.ClasseCreateInput, Prisma.ClasseUncheckedCreateInput>
}

/**
 * Classe createMany
 */
export type ClasseCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Classes.
   */
  data: Prisma.ClasseCreateManyInput | Prisma.ClasseCreateManyInput[]
}

/**
 * Classe update
 */
export type ClasseUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * The data needed to update a Classe.
   */
  data: Prisma.XOR<Prisma.ClasseUpdateInput, Prisma.ClasseUncheckedUpdateInput>
  /**
   * Choose, which Classe to update.
   */
  where: Prisma.ClasseWhereUniqueInput
}

/**
 * Classe updateMany
 */
export type ClasseUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Classes.
   */
  data: Prisma.XOR<Prisma.ClasseUpdateManyMutationInput, Prisma.ClasseUncheckedUpdateManyInput>
  /**
   * Filter which Classes to update
   */
  where?: Prisma.ClasseWhereInput
  /**
   * Limit how many Classes to update.
   */
  limit?: number
}

/**
 * Classe upsert
 */
export type ClasseUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * The filter to search for the Classe to update in case it exists.
   */
  where: Prisma.ClasseWhereUniqueInput
  /**
   * In case the Classe found by the `where` argument doesn't exist, create a new Classe with this data.
   */
  create: Prisma.XOR<Prisma.ClasseCreateInput, Prisma.ClasseUncheckedCreateInput>
  /**
   * In case the Classe was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ClasseUpdateInput, Prisma.ClasseUncheckedUpdateInput>
}

/**
 * Classe delete
 */
export type ClasseDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
  /**
   * Filter which Classe to delete.
   */
  where: Prisma.ClasseWhereUniqueInput
}

/**
 * Classe deleteMany
 */
export type ClasseDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Classes to delete
   */
  where?: Prisma.ClasseWhereInput
  /**
   * Limit how many Classes to delete.
   */
  limit?: number
}

/**
 * Classe findRaw
 */
export type ClasseFindRawArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
   */
  filter?: runtime.InputJsonValue
  /**
   * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
   */
  options?: runtime.InputJsonValue
}

/**
 * Classe aggregateRaw
 */
export type ClasseAggregateRawArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
   */
  pipeline?: runtime.InputJsonValue[]
  /**
   * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
   */
  options?: runtime.InputJsonValue
}

/**
 * Classe.section
 */
export type Classe$sectionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Section
   */
  select?: Prisma.SectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Section
   */
  omit?: Prisma.SectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SectionInclude<ExtArgs> | null
  where?: Prisma.SectionWhereInput
}

/**
 * Classe.option
 */
export type Classe$optionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Option
   */
  select?: Prisma.OptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Option
   */
  omit?: Prisma.OptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OptionInclude<ExtArgs> | null
  where?: Prisma.OptionWhereInput
}

/**
 * Classe.matieres
 */
export type Classe$matieresArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Matiere
   */
  select?: Prisma.MatiereSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Matiere
   */
  omit?: Prisma.MatiereOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MatiereInclude<ExtArgs> | null
  where?: Prisma.MatiereWhereInput
  orderBy?: Prisma.MatiereOrderByWithRelationInput | Prisma.MatiereOrderByWithRelationInput[]
  cursor?: Prisma.MatiereWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MatiereScalarFieldEnum | Prisma.MatiereScalarFieldEnum[]
}

/**
 * Classe.students
 */
export type Classe$studentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  where?: Prisma.StudentWhereInput
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  cursor?: Prisma.StudentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[]
}

/**
 * Classe.enseignantsClasses
 */
export type Classe$enseignantsClassesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EnseignantClasse
   */
  select?: Prisma.EnseignantClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EnseignantClasse
   */
  omit?: Prisma.EnseignantClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EnseignantClasseInclude<ExtArgs> | null
  where?: Prisma.EnseignantClasseWhereInput
  orderBy?: Prisma.EnseignantClasseOrderByWithRelationInput | Prisma.EnseignantClasseOrderByWithRelationInput[]
  cursor?: Prisma.EnseignantClasseWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EnseignantClasseScalarFieldEnum | Prisma.EnseignantClasseScalarFieldEnum[]
}

/**
 * Classe.titulaireEnseignant
 */
export type Classe$titulaireEnseignantArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Enseignant
   */
  select?: Prisma.EnseignantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Enseignant
   */
  omit?: Prisma.EnseignantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EnseignantInclude<ExtArgs> | null
  where?: Prisma.EnseignantWhereInput
}

/**
 * Classe.bulletins
 */
export type Classe$bulletinsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Bulletin
   */
  select?: Prisma.BulletinSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Bulletin
   */
  omit?: Prisma.BulletinOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BulletinInclude<ExtArgs> | null
  where?: Prisma.BulletinWhereInput
  orderBy?: Prisma.BulletinOrderByWithRelationInput | Prisma.BulletinOrderByWithRelationInput[]
  cursor?: Prisma.BulletinWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.BulletinScalarFieldEnum | Prisma.BulletinScalarFieldEnum[]
}

/**
 * Classe without action
 */
export type ClasseDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Classe
   */
  select?: Prisma.ClasseSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Classe
   */
  omit?: Prisma.ClasseOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClasseInclude<ExtArgs> | null
}
