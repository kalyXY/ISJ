
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `HistoriqueModification` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model HistoriqueModification
 * 
 */
export type HistoriqueModificationModel = runtime.Types.Result.DefaultSelection<Prisma.$HistoriqueModificationPayload>

export type AggregateHistoriqueModification = {
  _count: HistoriqueModificationCountAggregateOutputType | null
  _avg: HistoriqueModificationAvgAggregateOutputType | null
  _sum: HistoriqueModificationSumAggregateOutputType | null
  _min: HistoriqueModificationMinAggregateOutputType | null
  _max: HistoriqueModificationMaxAggregateOutputType | null
}

export type HistoriqueModificationAvgAggregateOutputType = {
  ancienneValeur: number | null
  nouvelleValeur: number | null
}

export type HistoriqueModificationSumAggregateOutputType = {
  ancienneValeur: number | null
  nouvelleValeur: number | null
}

export type HistoriqueModificationMinAggregateOutputType = {
  id: string | null
  noteId: string | null
  ancienneValeur: number | null
  nouvelleValeur: number | null
  userId: string | null
  action: string | null
  commentaire: string | null
  createdAt: Date | null
}

export type HistoriqueModificationMaxAggregateOutputType = {
  id: string | null
  noteId: string | null
  ancienneValeur: number | null
  nouvelleValeur: number | null
  userId: string | null
  action: string | null
  commentaire: string | null
  createdAt: Date | null
}

export type HistoriqueModificationCountAggregateOutputType = {
  id: number
  noteId: number
  ancienneValeur: number
  nouvelleValeur: number
  userId: number
  action: number
  commentaire: number
  createdAt: number
  _all: number
}


export type HistoriqueModificationAvgAggregateInputType = {
  ancienneValeur?: true
  nouvelleValeur?: true
}

export type HistoriqueModificationSumAggregateInputType = {
  ancienneValeur?: true
  nouvelleValeur?: true
}

export type HistoriqueModificationMinAggregateInputType = {
  id?: true
  noteId?: true
  ancienneValeur?: true
  nouvelleValeur?: true
  userId?: true
  action?: true
  commentaire?: true
  createdAt?: true
}

export type HistoriqueModificationMaxAggregateInputType = {
  id?: true
  noteId?: true
  ancienneValeur?: true
  nouvelleValeur?: true
  userId?: true
  action?: true
  commentaire?: true
  createdAt?: true
}

export type HistoriqueModificationCountAggregateInputType = {
  id?: true
  noteId?: true
  ancienneValeur?: true
  nouvelleValeur?: true
  userId?: true
  action?: true
  commentaire?: true
  createdAt?: true
  _all?: true
}

export type HistoriqueModificationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which HistoriqueModification to aggregate.
   */
  where?: Prisma.HistoriqueModificationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HistoriqueModifications to fetch.
   */
  orderBy?: Prisma.HistoriqueModificationOrderByWithRelationInput | Prisma.HistoriqueModificationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.HistoriqueModificationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HistoriqueModifications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HistoriqueModifications.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned HistoriqueModifications
  **/
  _count?: true | HistoriqueModificationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: HistoriqueModificationAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: HistoriqueModificationSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: HistoriqueModificationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: HistoriqueModificationMaxAggregateInputType
}

export type GetHistoriqueModificationAggregateType<T extends HistoriqueModificationAggregateArgs> = {
      [P in keyof T & keyof AggregateHistoriqueModification]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateHistoriqueModification[P]>
    : Prisma.GetScalarType<T[P], AggregateHistoriqueModification[P]>
}




export type HistoriqueModificationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.HistoriqueModificationWhereInput
  orderBy?: Prisma.HistoriqueModificationOrderByWithAggregationInput | Prisma.HistoriqueModificationOrderByWithAggregationInput[]
  by: Prisma.HistoriqueModificationScalarFieldEnum[] | Prisma.HistoriqueModificationScalarFieldEnum
  having?: Prisma.HistoriqueModificationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: HistoriqueModificationCountAggregateInputType | true
  _avg?: HistoriqueModificationAvgAggregateInputType
  _sum?: HistoriqueModificationSumAggregateInputType
  _min?: HistoriqueModificationMinAggregateInputType
  _max?: HistoriqueModificationMaxAggregateInputType
}

export type HistoriqueModificationGroupByOutputType = {
  id: string
  noteId: string
  ancienneValeur: number | null
  nouvelleValeur: number | null
  userId: string
  action: string
  commentaire: string | null
  createdAt: Date
  _count: HistoriqueModificationCountAggregateOutputType | null
  _avg: HistoriqueModificationAvgAggregateOutputType | null
  _sum: HistoriqueModificationSumAggregateOutputType | null
  _min: HistoriqueModificationMinAggregateOutputType | null
  _max: HistoriqueModificationMaxAggregateOutputType | null
}

type GetHistoriqueModificationGroupByPayload<T extends HistoriqueModificationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<HistoriqueModificationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof HistoriqueModificationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], HistoriqueModificationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], HistoriqueModificationGroupByOutputType[P]>
      }
    >
  > 



export type HistoriqueModificationWhereInput = {
  AND?: Prisma.HistoriqueModificationWhereInput | Prisma.HistoriqueModificationWhereInput[]
  OR?: Prisma.HistoriqueModificationWhereInput[]
  NOT?: Prisma.HistoriqueModificationWhereInput | Prisma.HistoriqueModificationWhereInput[]
  id?: Prisma.StringFilter<"HistoriqueModification"> | string
  noteId?: Prisma.StringFilter<"HistoriqueModification"> | string
  ancienneValeur?: Prisma.FloatNullableFilter<"HistoriqueModification"> | number | null
  nouvelleValeur?: Prisma.FloatNullableFilter<"HistoriqueModification"> | number | null
  userId?: Prisma.StringFilter<"HistoriqueModification"> | string
  action?: Prisma.StringFilter<"HistoriqueModification"> | string
  commentaire?: Prisma.StringNullableFilter<"HistoriqueModification"> | string | null
  createdAt?: Prisma.DateTimeFilter<"HistoriqueModification"> | Date | string
  note?: Prisma.XOR<Prisma.NoteScalarRelationFilter, Prisma.NoteWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type HistoriqueModificationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  commentaire?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  note?: Prisma.NoteOrderByWithRelationInput
  user?: Prisma.UserOrderByWithRelationInput
}

export type HistoriqueModificationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.HistoriqueModificationWhereInput | Prisma.HistoriqueModificationWhereInput[]
  OR?: Prisma.HistoriqueModificationWhereInput[]
  NOT?: Prisma.HistoriqueModificationWhereInput | Prisma.HistoriqueModificationWhereInput[]
  noteId?: Prisma.StringFilter<"HistoriqueModification"> | string
  ancienneValeur?: Prisma.FloatNullableFilter<"HistoriqueModification"> | number | null
  nouvelleValeur?: Prisma.FloatNullableFilter<"HistoriqueModification"> | number | null
  userId?: Prisma.StringFilter<"HistoriqueModification"> | string
  action?: Prisma.StringFilter<"HistoriqueModification"> | string
  commentaire?: Prisma.StringNullableFilter<"HistoriqueModification"> | string | null
  createdAt?: Prisma.DateTimeFilter<"HistoriqueModification"> | Date | string
  note?: Prisma.XOR<Prisma.NoteScalarRelationFilter, Prisma.NoteWhereInput>
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type HistoriqueModificationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  commentaire?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.HistoriqueModificationCountOrderByAggregateInput
  _avg?: Prisma.HistoriqueModificationAvgOrderByAggregateInput
  _max?: Prisma.HistoriqueModificationMaxOrderByAggregateInput
  _min?: Prisma.HistoriqueModificationMinOrderByAggregateInput
  _sum?: Prisma.HistoriqueModificationSumOrderByAggregateInput
}

export type HistoriqueModificationScalarWhereWithAggregatesInput = {
  AND?: Prisma.HistoriqueModificationScalarWhereWithAggregatesInput | Prisma.HistoriqueModificationScalarWhereWithAggregatesInput[]
  OR?: Prisma.HistoriqueModificationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.HistoriqueModificationScalarWhereWithAggregatesInput | Prisma.HistoriqueModificationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"HistoriqueModification"> | string
  noteId?: Prisma.StringWithAggregatesFilter<"HistoriqueModification"> | string
  ancienneValeur?: Prisma.FloatNullableWithAggregatesFilter<"HistoriqueModification"> | number | null
  nouvelleValeur?: Prisma.FloatNullableWithAggregatesFilter<"HistoriqueModification"> | number | null
  userId?: Prisma.StringWithAggregatesFilter<"HistoriqueModification"> | string
  action?: Prisma.StringWithAggregatesFilter<"HistoriqueModification"> | string
  commentaire?: Prisma.StringNullableWithAggregatesFilter<"HistoriqueModification"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"HistoriqueModification"> | Date | string
}

export type HistoriqueModificationCreateInput = {
  id?: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  action: string
  commentaire?: string | null
  createdAt?: Date | string
  note: Prisma.NoteCreateNestedOneWithoutHistoriqueModificationsInput
  user: Prisma.UserCreateNestedOneWithoutHistoriqueModificationsInput
}

export type HistoriqueModificationUncheckedCreateInput = {
  id?: string
  noteId: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  userId: string
  action: string
  commentaire?: string | null
  createdAt?: Date | string
}

export type HistoriqueModificationUpdateInput = {
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NoteUpdateOneRequiredWithoutHistoriqueModificationsNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutHistoriqueModificationsNestedInput
}

export type HistoriqueModificationUncheckedUpdateInput = {
  noteId?: Prisma.StringFieldUpdateOperationsInput | string
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HistoriqueModificationCreateManyInput = {
  id?: string
  noteId: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  userId: string
  action: string
  commentaire?: string | null
  createdAt?: Date | string
}

export type HistoriqueModificationUpdateManyMutationInput = {
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HistoriqueModificationUncheckedUpdateManyInput = {
  noteId?: Prisma.StringFieldUpdateOperationsInput | string
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HistoriqueModificationListRelationFilter = {
  every?: Prisma.HistoriqueModificationWhereInput
  some?: Prisma.HistoriqueModificationWhereInput
  none?: Prisma.HistoriqueModificationWhereInput
}

export type HistoriqueModificationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type HistoriqueModificationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  commentaire?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type HistoriqueModificationAvgOrderByAggregateInput = {
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
}

export type HistoriqueModificationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  commentaire?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type HistoriqueModificationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  action?: Prisma.SortOrder
  commentaire?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type HistoriqueModificationSumOrderByAggregateInput = {
  ancienneValeur?: Prisma.SortOrder
  nouvelleValeur?: Prisma.SortOrder
}

export type HistoriqueModificationCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutUserInput, Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput> | Prisma.HistoriqueModificationCreateWithoutUserInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput | Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyUserInputEnvelope
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
}

export type HistoriqueModificationUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutUserInput, Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput> | Prisma.HistoriqueModificationCreateWithoutUserInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput | Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyUserInputEnvelope
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
}

export type HistoriqueModificationUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutUserInput, Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput> | Prisma.HistoriqueModificationCreateWithoutUserInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput | Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutUserInput | Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyUserInputEnvelope
  set?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  disconnect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  delete?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  update?: Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutUserInput | Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.HistoriqueModificationUpdateManyWithWhereWithoutUserInput | Prisma.HistoriqueModificationUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.HistoriqueModificationScalarWhereInput | Prisma.HistoriqueModificationScalarWhereInput[]
}

export type HistoriqueModificationUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutUserInput, Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput> | Prisma.HistoriqueModificationCreateWithoutUserInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput | Prisma.HistoriqueModificationCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutUserInput | Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyUserInputEnvelope
  set?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  disconnect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  delete?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  update?: Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutUserInput | Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.HistoriqueModificationUpdateManyWithWhereWithoutUserInput | Prisma.HistoriqueModificationUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.HistoriqueModificationScalarWhereInput | Prisma.HistoriqueModificationScalarWhereInput[]
}

export type HistoriqueModificationCreateNestedManyWithoutNoteInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput> | Prisma.HistoriqueModificationCreateWithoutNoteInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput | Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyNoteInputEnvelope
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
}

export type HistoriqueModificationUncheckedCreateNestedManyWithoutNoteInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput> | Prisma.HistoriqueModificationCreateWithoutNoteInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput | Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyNoteInputEnvelope
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
}

export type HistoriqueModificationUpdateManyWithoutNoteNestedInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput> | Prisma.HistoriqueModificationCreateWithoutNoteInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput | Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput[]
  upsert?: Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutNoteInput | Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutNoteInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyNoteInputEnvelope
  set?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  disconnect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  delete?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  update?: Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutNoteInput | Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutNoteInput[]
  updateMany?: Prisma.HistoriqueModificationUpdateManyWithWhereWithoutNoteInput | Prisma.HistoriqueModificationUpdateManyWithWhereWithoutNoteInput[]
  deleteMany?: Prisma.HistoriqueModificationScalarWhereInput | Prisma.HistoriqueModificationScalarWhereInput[]
}

export type HistoriqueModificationUncheckedUpdateManyWithoutNoteNestedInput = {
  create?: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput> | Prisma.HistoriqueModificationCreateWithoutNoteInput[] | Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput[]
  connectOrCreate?: Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput | Prisma.HistoriqueModificationCreateOrConnectWithoutNoteInput[]
  upsert?: Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutNoteInput | Prisma.HistoriqueModificationUpsertWithWhereUniqueWithoutNoteInput[]
  createMany?: Prisma.HistoriqueModificationCreateManyNoteInputEnvelope
  set?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  disconnect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  delete?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  connect?: Prisma.HistoriqueModificationWhereUniqueInput | Prisma.HistoriqueModificationWhereUniqueInput[]
  update?: Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutNoteInput | Prisma.HistoriqueModificationUpdateWithWhereUniqueWithoutNoteInput[]
  updateMany?: Prisma.HistoriqueModificationUpdateManyWithWhereWithoutNoteInput | Prisma.HistoriqueModificationUpdateManyWithWhereWithoutNoteInput[]
  deleteMany?: Prisma.HistoriqueModificationScalarWhereInput | Prisma.HistoriqueModificationScalarWhereInput[]
}

export type HistoriqueModificationCreateWithoutUserInput = {
  id?: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  action: string
  commentaire?: string | null
  createdAt?: Date | string
  note: Prisma.NoteCreateNestedOneWithoutHistoriqueModificationsInput
}

export type HistoriqueModificationUncheckedCreateWithoutUserInput = {
  id?: string
  noteId: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  action: string
  commentaire?: string | null
  createdAt?: Date | string
}

export type HistoriqueModificationCreateOrConnectWithoutUserInput = {
  where: Prisma.HistoriqueModificationWhereUniqueInput
  create: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutUserInput, Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput>
}

export type HistoriqueModificationCreateManyUserInputEnvelope = {
  data: Prisma.HistoriqueModificationCreateManyUserInput | Prisma.HistoriqueModificationCreateManyUserInput[]
}

export type HistoriqueModificationUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.HistoriqueModificationWhereUniqueInput
  update: Prisma.XOR<Prisma.HistoriqueModificationUpdateWithoutUserInput, Prisma.HistoriqueModificationUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutUserInput, Prisma.HistoriqueModificationUncheckedCreateWithoutUserInput>
}

export type HistoriqueModificationUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.HistoriqueModificationWhereUniqueInput
  data: Prisma.XOR<Prisma.HistoriqueModificationUpdateWithoutUserInput, Prisma.HistoriqueModificationUncheckedUpdateWithoutUserInput>
}

export type HistoriqueModificationUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.HistoriqueModificationScalarWhereInput
  data: Prisma.XOR<Prisma.HistoriqueModificationUpdateManyMutationInput, Prisma.HistoriqueModificationUncheckedUpdateManyWithoutUserInput>
}

export type HistoriqueModificationScalarWhereInput = {
  AND?: Prisma.HistoriqueModificationScalarWhereInput | Prisma.HistoriqueModificationScalarWhereInput[]
  OR?: Prisma.HistoriqueModificationScalarWhereInput[]
  NOT?: Prisma.HistoriqueModificationScalarWhereInput | Prisma.HistoriqueModificationScalarWhereInput[]
  id?: Prisma.StringFilter<"HistoriqueModification"> | string
  noteId?: Prisma.StringFilter<"HistoriqueModification"> | string
  ancienneValeur?: Prisma.FloatNullableFilter<"HistoriqueModification"> | number | null
  nouvelleValeur?: Prisma.FloatNullableFilter<"HistoriqueModification"> | number | null
  userId?: Prisma.StringFilter<"HistoriqueModification"> | string
  action?: Prisma.StringFilter<"HistoriqueModification"> | string
  commentaire?: Prisma.StringNullableFilter<"HistoriqueModification"> | string | null
  createdAt?: Prisma.DateTimeFilter<"HistoriqueModification"> | Date | string
}

export type HistoriqueModificationCreateWithoutNoteInput = {
  id?: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  action: string
  commentaire?: string | null
  createdAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutHistoriqueModificationsInput
}

export type HistoriqueModificationUncheckedCreateWithoutNoteInput = {
  id?: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  userId: string
  action: string
  commentaire?: string | null
  createdAt?: Date | string
}

export type HistoriqueModificationCreateOrConnectWithoutNoteInput = {
  where: Prisma.HistoriqueModificationWhereUniqueInput
  create: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput>
}

export type HistoriqueModificationCreateManyNoteInputEnvelope = {
  data: Prisma.HistoriqueModificationCreateManyNoteInput | Prisma.HistoriqueModificationCreateManyNoteInput[]
}

export type HistoriqueModificationUpsertWithWhereUniqueWithoutNoteInput = {
  where: Prisma.HistoriqueModificationWhereUniqueInput
  update: Prisma.XOR<Prisma.HistoriqueModificationUpdateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedUpdateWithoutNoteInput>
  create: Prisma.XOR<Prisma.HistoriqueModificationCreateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedCreateWithoutNoteInput>
}

export type HistoriqueModificationUpdateWithWhereUniqueWithoutNoteInput = {
  where: Prisma.HistoriqueModificationWhereUniqueInput
  data: Prisma.XOR<Prisma.HistoriqueModificationUpdateWithoutNoteInput, Prisma.HistoriqueModificationUncheckedUpdateWithoutNoteInput>
}

export type HistoriqueModificationUpdateManyWithWhereWithoutNoteInput = {
  where: Prisma.HistoriqueModificationScalarWhereInput
  data: Prisma.XOR<Prisma.HistoriqueModificationUpdateManyMutationInput, Prisma.HistoriqueModificationUncheckedUpdateManyWithoutNoteInput>
}

export type HistoriqueModificationCreateManyUserInput = {
  id?: string
  noteId: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  action: string
  commentaire?: string | null
  createdAt?: Date | string
}

export type HistoriqueModificationUpdateWithoutUserInput = {
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NoteUpdateOneRequiredWithoutHistoriqueModificationsNestedInput
}

export type HistoriqueModificationUncheckedUpdateWithoutUserInput = {
  noteId?: Prisma.StringFieldUpdateOperationsInput | string
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HistoriqueModificationUncheckedUpdateManyWithoutUserInput = {
  noteId?: Prisma.StringFieldUpdateOperationsInput | string
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HistoriqueModificationCreateManyNoteInput = {
  id?: string
  ancienneValeur?: number | null
  nouvelleValeur?: number | null
  userId: string
  action: string
  commentaire?: string | null
  createdAt?: Date | string
}

export type HistoriqueModificationUpdateWithoutNoteInput = {
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutHistoriqueModificationsNestedInput
}

export type HistoriqueModificationUncheckedUpdateWithoutNoteInput = {
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type HistoriqueModificationUncheckedUpdateManyWithoutNoteInput = {
  ancienneValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  nouvelleValeur?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  action?: Prisma.StringFieldUpdateOperationsInput | string
  commentaire?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type HistoriqueModificationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  noteId?: boolean
  ancienneValeur?: boolean
  nouvelleValeur?: boolean
  userId?: boolean
  action?: boolean
  commentaire?: boolean
  createdAt?: boolean
  note?: boolean | Prisma.NoteDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["historiqueModification"]>



export type HistoriqueModificationSelectScalar = {
  id?: boolean
  noteId?: boolean
  ancienneValeur?: boolean
  nouvelleValeur?: boolean
  userId?: boolean
  action?: boolean
  commentaire?: boolean
  createdAt?: boolean
}

export type HistoriqueModificationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "noteId" | "ancienneValeur" | "nouvelleValeur" | "userId" | "action" | "commentaire" | "createdAt", ExtArgs["result"]["historiqueModification"]>
export type HistoriqueModificationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  note?: boolean | Prisma.NoteDefaultArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $HistoriqueModificationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "HistoriqueModification"
  objects: {
    note: Prisma.$NotePayload<ExtArgs>
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    noteId: string
    ancienneValeur: number | null
    nouvelleValeur: number | null
    userId: string
    action: string
    commentaire: string | null
    createdAt: Date
  }, ExtArgs["result"]["historiqueModification"]>
  composites: {}
}

export type HistoriqueModificationGetPayload<S extends boolean | null | undefined | HistoriqueModificationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload, S>

export type HistoriqueModificationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<HistoriqueModificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: HistoriqueModificationCountAggregateInputType | true
  }

export interface HistoriqueModificationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistoriqueModification'], meta: { name: 'HistoriqueModification' } }
  /**
   * Find zero or one HistoriqueModification that matches the filter.
   * @param {HistoriqueModificationFindUniqueArgs} args - Arguments to find a HistoriqueModification
   * @example
   * // Get one HistoriqueModification
   * const historiqueModification = await prisma.historiqueModification.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends HistoriqueModificationFindUniqueArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one HistoriqueModification that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {HistoriqueModificationFindUniqueOrThrowArgs} args - Arguments to find a HistoriqueModification
   * @example
   * // Get one HistoriqueModification
   * const historiqueModification = await prisma.historiqueModification.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends HistoriqueModificationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first HistoriqueModification that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationFindFirstArgs} args - Arguments to find a HistoriqueModification
   * @example
   * // Get one HistoriqueModification
   * const historiqueModification = await prisma.historiqueModification.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends HistoriqueModificationFindFirstArgs>(args?: Prisma.SelectSubset<T, HistoriqueModificationFindFirstArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first HistoriqueModification that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationFindFirstOrThrowArgs} args - Arguments to find a HistoriqueModification
   * @example
   * // Get one HistoriqueModification
   * const historiqueModification = await prisma.historiqueModification.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends HistoriqueModificationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, HistoriqueModificationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more HistoriqueModifications that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all HistoriqueModifications
   * const historiqueModifications = await prisma.historiqueModification.findMany()
   * 
   * // Get first 10 HistoriqueModifications
   * const historiqueModifications = await prisma.historiqueModification.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const historiqueModificationWithIdOnly = await prisma.historiqueModification.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends HistoriqueModificationFindManyArgs>(args?: Prisma.SelectSubset<T, HistoriqueModificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a HistoriqueModification.
   * @param {HistoriqueModificationCreateArgs} args - Arguments to create a HistoriqueModification.
   * @example
   * // Create one HistoriqueModification
   * const HistoriqueModification = await prisma.historiqueModification.create({
   *   data: {
   *     // ... data to create a HistoriqueModification
   *   }
   * })
   * 
   */
  create<T extends HistoriqueModificationCreateArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationCreateArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many HistoriqueModifications.
   * @param {HistoriqueModificationCreateManyArgs} args - Arguments to create many HistoriqueModifications.
   * @example
   * // Create many HistoriqueModifications
   * const historiqueModification = await prisma.historiqueModification.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends HistoriqueModificationCreateManyArgs>(args?: Prisma.SelectSubset<T, HistoriqueModificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a HistoriqueModification.
   * @param {HistoriqueModificationDeleteArgs} args - Arguments to delete one HistoriqueModification.
   * @example
   * // Delete one HistoriqueModification
   * const HistoriqueModification = await prisma.historiqueModification.delete({
   *   where: {
   *     // ... filter to delete one HistoriqueModification
   *   }
   * })
   * 
   */
  delete<T extends HistoriqueModificationDeleteArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationDeleteArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one HistoriqueModification.
   * @param {HistoriqueModificationUpdateArgs} args - Arguments to update one HistoriqueModification.
   * @example
   * // Update one HistoriqueModification
   * const historiqueModification = await prisma.historiqueModification.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends HistoriqueModificationUpdateArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationUpdateArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more HistoriqueModifications.
   * @param {HistoriqueModificationDeleteManyArgs} args - Arguments to filter HistoriqueModifications to delete.
   * @example
   * // Delete a few HistoriqueModifications
   * const { count } = await prisma.historiqueModification.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends HistoriqueModificationDeleteManyArgs>(args?: Prisma.SelectSubset<T, HistoriqueModificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more HistoriqueModifications.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many HistoriqueModifications
   * const historiqueModification = await prisma.historiqueModification.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends HistoriqueModificationUpdateManyArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one HistoriqueModification.
   * @param {HistoriqueModificationUpsertArgs} args - Arguments to update or create a HistoriqueModification.
   * @example
   * // Update or create a HistoriqueModification
   * const historiqueModification = await prisma.historiqueModification.upsert({
   *   create: {
   *     // ... data to create a HistoriqueModification
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the HistoriqueModification we want to update
   *   }
   * })
   */
  upsert<T extends HistoriqueModificationUpsertArgs>(args: Prisma.SelectSubset<T, HistoriqueModificationUpsertArgs<ExtArgs>>): Prisma.Prisma__HistoriqueModificationClient<runtime.Types.Result.GetResult<Prisma.$HistoriqueModificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more HistoriqueModifications that matches the filter.
   * @param {HistoriqueModificationFindRawArgs} args - Select which filters you would like to apply.
   * @example
   * const historiqueModification = await prisma.historiqueModification.findRaw({
   *   filter: { age: { $gt: 25 } }
   * })
   */
  findRaw(args?: Prisma.HistoriqueModificationFindRawArgs): Prisma.PrismaPromise<Prisma.JsonObject>

  /**
   * Perform aggregation operations on a HistoriqueModification.
   * @param {HistoriqueModificationAggregateRawArgs} args - Select which aggregations you would like to apply.
   * @example
   * const historiqueModification = await prisma.historiqueModification.aggregateRaw({
   *   pipeline: [
   *     { $match: { status: "registered" } },
   *     { $group: { _id: "$country", total: { $sum: 1 } } }
   *   ]
   * })
   */
  aggregateRaw(args?: Prisma.HistoriqueModificationAggregateRawArgs): Prisma.PrismaPromise<Prisma.JsonObject>


  /**
   * Count the number of HistoriqueModifications.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationCountArgs} args - Arguments to filter HistoriqueModifications to count.
   * @example
   * // Count the number of HistoriqueModifications
   * const count = await prisma.historiqueModification.count({
   *   where: {
   *     // ... the filter for the HistoriqueModifications we want to count
   *   }
   * })
  **/
  count<T extends HistoriqueModificationCountArgs>(
    args?: Prisma.Subset<T, HistoriqueModificationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], HistoriqueModificationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a HistoriqueModification.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends HistoriqueModificationAggregateArgs>(args: Prisma.Subset<T, HistoriqueModificationAggregateArgs>): Prisma.PrismaPromise<GetHistoriqueModificationAggregateType<T>>

  /**
   * Group by HistoriqueModification.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HistoriqueModificationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends HistoriqueModificationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: HistoriqueModificationGroupByArgs['orderBy'] }
      : { orderBy?: HistoriqueModificationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, HistoriqueModificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistoriqueModificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the HistoriqueModification model
 */
readonly fields: HistoriqueModificationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for HistoriqueModification.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__HistoriqueModificationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  note<T extends Prisma.NoteDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.NoteDefaultArgs<ExtArgs>>): Prisma.Prisma__NoteClient<runtime.Types.Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the HistoriqueModification model
 */
export interface HistoriqueModificationFieldRefs {
  readonly id: Prisma.FieldRef<"HistoriqueModification", 'String'>
  readonly noteId: Prisma.FieldRef<"HistoriqueModification", 'String'>
  readonly ancienneValeur: Prisma.FieldRef<"HistoriqueModification", 'Float'>
  readonly nouvelleValeur: Prisma.FieldRef<"HistoriqueModification", 'Float'>
  readonly userId: Prisma.FieldRef<"HistoriqueModification", 'String'>
  readonly action: Prisma.FieldRef<"HistoriqueModification", 'String'>
  readonly commentaire: Prisma.FieldRef<"HistoriqueModification", 'String'>
  readonly createdAt: Prisma.FieldRef<"HistoriqueModification", 'DateTime'>
}
    

// Custom InputTypes
/**
 * HistoriqueModification findUnique
 */
export type HistoriqueModificationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * Filter, which HistoriqueModification to fetch.
   */
  where: Prisma.HistoriqueModificationWhereUniqueInput
}

/**
 * HistoriqueModification findUniqueOrThrow
 */
export type HistoriqueModificationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * Filter, which HistoriqueModification to fetch.
   */
  where: Prisma.HistoriqueModificationWhereUniqueInput
}

/**
 * HistoriqueModification findFirst
 */
export type HistoriqueModificationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * Filter, which HistoriqueModification to fetch.
   */
  where?: Prisma.HistoriqueModificationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HistoriqueModifications to fetch.
   */
  orderBy?: Prisma.HistoriqueModificationOrderByWithRelationInput | Prisma.HistoriqueModificationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for HistoriqueModifications.
   */
  cursor?: Prisma.HistoriqueModificationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HistoriqueModifications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HistoriqueModifications.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of HistoriqueModifications.
   */
  distinct?: Prisma.HistoriqueModificationScalarFieldEnum | Prisma.HistoriqueModificationScalarFieldEnum[]
}

/**
 * HistoriqueModification findFirstOrThrow
 */
export type HistoriqueModificationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * Filter, which HistoriqueModification to fetch.
   */
  where?: Prisma.HistoriqueModificationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HistoriqueModifications to fetch.
   */
  orderBy?: Prisma.HistoriqueModificationOrderByWithRelationInput | Prisma.HistoriqueModificationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for HistoriqueModifications.
   */
  cursor?: Prisma.HistoriqueModificationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HistoriqueModifications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HistoriqueModifications.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of HistoriqueModifications.
   */
  distinct?: Prisma.HistoriqueModificationScalarFieldEnum | Prisma.HistoriqueModificationScalarFieldEnum[]
}

/**
 * HistoriqueModification findMany
 */
export type HistoriqueModificationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * Filter, which HistoriqueModifications to fetch.
   */
  where?: Prisma.HistoriqueModificationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of HistoriqueModifications to fetch.
   */
  orderBy?: Prisma.HistoriqueModificationOrderByWithRelationInput | Prisma.HistoriqueModificationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing HistoriqueModifications.
   */
  cursor?: Prisma.HistoriqueModificationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` HistoriqueModifications from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` HistoriqueModifications.
   */
  skip?: number
  distinct?: Prisma.HistoriqueModificationScalarFieldEnum | Prisma.HistoriqueModificationScalarFieldEnum[]
}

/**
 * HistoriqueModification create
 */
export type HistoriqueModificationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * The data needed to create a HistoriqueModification.
   */
  data: Prisma.XOR<Prisma.HistoriqueModificationCreateInput, Prisma.HistoriqueModificationUncheckedCreateInput>
}

/**
 * HistoriqueModification createMany
 */
export type HistoriqueModificationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many HistoriqueModifications.
   */
  data: Prisma.HistoriqueModificationCreateManyInput | Prisma.HistoriqueModificationCreateManyInput[]
}

/**
 * HistoriqueModification update
 */
export type HistoriqueModificationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * The data needed to update a HistoriqueModification.
   */
  data: Prisma.XOR<Prisma.HistoriqueModificationUpdateInput, Prisma.HistoriqueModificationUncheckedUpdateInput>
  /**
   * Choose, which HistoriqueModification to update.
   */
  where: Prisma.HistoriqueModificationWhereUniqueInput
}

/**
 * HistoriqueModification updateMany
 */
export type HistoriqueModificationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update HistoriqueModifications.
   */
  data: Prisma.XOR<Prisma.HistoriqueModificationUpdateManyMutationInput, Prisma.HistoriqueModificationUncheckedUpdateManyInput>
  /**
   * Filter which HistoriqueModifications to update
   */
  where?: Prisma.HistoriqueModificationWhereInput
  /**
   * Limit how many HistoriqueModifications to update.
   */
  limit?: number
}

/**
 * HistoriqueModification upsert
 */
export type HistoriqueModificationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * The filter to search for the HistoriqueModification to update in case it exists.
   */
  where: Prisma.HistoriqueModificationWhereUniqueInput
  /**
   * In case the HistoriqueModification found by the `where` argument doesn't exist, create a new HistoriqueModification with this data.
   */
  create: Prisma.XOR<Prisma.HistoriqueModificationCreateInput, Prisma.HistoriqueModificationUncheckedCreateInput>
  /**
   * In case the HistoriqueModification was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.HistoriqueModificationUpdateInput, Prisma.HistoriqueModificationUncheckedUpdateInput>
}

/**
 * HistoriqueModification delete
 */
export type HistoriqueModificationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
  /**
   * Filter which HistoriqueModification to delete.
   */
  where: Prisma.HistoriqueModificationWhereUniqueInput
}

/**
 * HistoriqueModification deleteMany
 */
export type HistoriqueModificationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which HistoriqueModifications to delete
   */
  where?: Prisma.HistoriqueModificationWhereInput
  /**
   * Limit how many HistoriqueModifications to delete.
   */
  limit?: number
}

/**
 * HistoriqueModification findRaw
 */
export type HistoriqueModificationFindRawArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
   */
  filter?: runtime.InputJsonValue
  /**
   * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
   */
  options?: runtime.InputJsonValue
}

/**
 * HistoriqueModification aggregateRaw
 */
export type HistoriqueModificationAggregateRawArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
   */
  pipeline?: runtime.InputJsonValue[]
  /**
   * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
   */
  options?: runtime.InputJsonValue
}

/**
 * HistoriqueModification without action
 */
export type HistoriqueModificationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the HistoriqueModification
   */
  select?: Prisma.HistoriqueModificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the HistoriqueModification
   */
  omit?: Prisma.HistoriqueModificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HistoriqueModificationInclude<ExtArgs> | null
}
